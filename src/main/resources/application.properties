## Set the name of the Spring Boot application. This can be used for logging or in other parts of the application.
#spring.application.name=spring-boot-3.0
#
## Specify the port the Spring Boot application will run on. The default is 8080, but you can change it if needed.
#server.port=8080
#
## JDBC URL for the MySQL database connection.
## This specifies the host, port (3306 for MySQL), and the database name (spring_3) to connect to.
#spring.datasource.url=jdbc:mysql://localhost:3306/spring_3
#
## The username for accessing the MySQL database. Ensure this is correct for your environment.
#spring.datasource.username=root
#
## The password for the MySQL database user. Make sure to keep this secure.
#spring.datasource.password=Raysi@2002
#
## This setting enables the automatic generation of database schema when the application starts.
## Useful during development when schema changes need to be applied automatically.
#spring.jpa.generate-ddl=true
#
## Specifies the fully qualified class name of the JDBC driver to be used for connecting to the database.
## In this case, we are using the MySQL JDBC driver for database connections.
## "com.mysql.cj.jdbc.Driver" is the driver class for MySQL Connector/J, which is required to connect Spring Boot with a MySQL database.
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
## This setting configures Hibernate to automatically update the database schema on startup.
## 'update' means it will try to adjust the schema to match the entities defined in your code.
#spring.jpa.hibernate.ddl-auto=update
#
## This setting tells Spring JPA to show the SQL queries being executed in the console/log.
## It's useful for debugging or understanding what queries are being sent to the database.
#spring.jpa.show-sql=true